- name: installing/configuring shipping services
  hosts: shipping
  become: yes
  pre_tasks:
    - name: Ensure Python 3 and pip are installed on the target
      ansible.builtin.raw: yum install -y python3-pip
      changed_when: false
      ignore_errors: true
  tasks: 
    - name: install maven as shipping service is written in java
      ansible.builtin.yum:
        name: maven
        state: installed
    
    # Install PyMySQL using YUM.
    - name: Install python3-PyMySQL package using YUM
      ansible.builtin.yum:
        name: python3-PyMySQL
        state: present

    - name: check if roboshop user install or not
      ansible.builtin.command: id roboshop
      register: output
      ignore_errors: true

    - name: add roboshop user
      ansible.builtin.user:
        name: roboshop
      when: output.rc != 0

    - name: check /app directory exist or not
      ansible.builtin.stat:
        path: /app
      register: directory
      ignore_errors: yes

    - name: create /app directory
      ansible.builtin.file:
        path: /app
        state: directory
      when: directory.stat.exists == false
    
    - name: download shipping artifact
      ansible.builtin.get_url:
        url: https://roboshop-builds.s3.amazonaws.com/shipping.zip
        dest: /tmp
    
    - name: install unzip tool
      ansible.builtin.yum:
        name: unzip
        state: installed

    - name: unzip downloaded shipping artifact
      ansible.builtin.unarchive:
        src: /tmp/shipping.zip
        dest: /app
        remote_src: yes

    - name: installing dependencies
      ansible.builtin.command: mvn clean package
      args:
        chdir: /app

    - name: installing dependencies
      ansible.builtin.command: mv target/shipping-1.0.jar.original shipping.jar
      args:
        chdir: /app

    - name: copy shipping service
      ansible.builtin.copy:
        src: 15-shipping.service
        dest: /etc/systemd/system/shipping.service
    
    - name: daemon reload
      ansible.builtin.systemd:
        daemon_reload: true
    
    - name: start/enable shipping
      ansible.builtin.service:
        name: shipping
        state: restarted
        enabled: true

    - name: install mysql to load schema to the Database
      ansible.builtin.yum:
        name: mysql
        state: installed
    
    - name: Load the original schema into MySQL (which may create the 'cities' db)
  # This runs every time, but a well-written schema should not error on reruns.
      ansible.builtin.shell: "mysql -h 172.31.15.68 -uroboshop -pRoboShop@1 < /app/db/schema.sql"

    - name: Check if the incorrect 'cities' database exists
      community.mysql.mysql_query:
        login_user: roboshop
        login_password: "RoboShop@1"
        login_host: 172.31.15.68
        query: "SHOW DATABASES LIKE 'cities';"
      register: cities_db_check

    - name: Rename the 'cities' database to 'shipping' if it exists
      # This task is the core of the fix. It is atomic and idempotent.
      when: cities_db_check.rowcount > 0
      community.mysql.mysql_query:
        login_user: roboshop
        login_password: "RoboShop@1"
        login_host: 172.31.15.68
        query:
          - "CREATE DATABASE IF NOT EXISTS shipping;" # Create the target DB first
          - "RENAME TABLE cities.cities TO shipping.cities;" # Move the table
          - "DROP DATABASE cities;" # Drop the old, now-empty database
      # We use a multi-query block to do this safely.

    - name: Check if the 'cities' table needs renaming inside the 'shipping' database
      community.mysql.mysql_query:
        login_user: roboshop
        login_password: "RoboShop@1"
        login_host: 172.31.15.68
        login_db: shipping # Specify the database to check in
        query: "SHOW TABLES LIKE 'cities';"
      register: cities_table_check

    - name: Rename the 'cities' table to 'shipping_details' for clarity
      # This is an optional but good step if your app expects 'shipping_details'
      when: cities_table_check.rowcount > 0
      community.mysql.mysql_query:
        login_user: roboshop
        login_password: "RoboShop@1"
        login_host: 172.31.15.68
        login_db: shipping
        query: "RENAME TABLE cities TO shipping_details;"
    - name: restart shipping
      ansible.builtin.service:
        name: shipping
        state: restarted
    