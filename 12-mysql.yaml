- name: install/configure mysql
  hosts: mysql
  become: yes
  pre_tasks:
    - name: Ensure Python 3 is installed on the target (prerequisite for Ansible)
      ansible.builtin.raw: yum install -y python3
      changed_when: false
      # We ignore errors in case python3 is already installed.
      # The 'raw' module is used because it doesn't require Python on the target.
      ignore_errors: true
  tasks: 
    - name: install extra packages for enterprise linux
      ansible.builtin.yum:
        name: epel-release
        state: installed

    - name: Temporarily set SELinux to permissive mode
      ansible.builtin.command: setenforce 0

    - name: Remove conflicting mysql/mariadb packages
      ansible.builtin.yum:
        name:
          - mysql
          - mysql-server
          - mysql-libs
          - mysql-common
          - mariadb
          - mariadb-libs
          - mariadb-connector-c-config
        state: absent
        autoremove: yes # Remove any unused dependencies as well
      ignore_errors: yes # Ignore errors if a package is already removed

    - name: disable mysql-8 default module
      ansible.builtin.command: yum module disable mysql -y 

    - name: copy MySQL 5.7 Server 
      ansible.builtin.copy:
        src: 13-mysql.repo
        dest: /etc/yum.repos.d/mysql.repo

    - name: install mysql
      ansible.builtin.command: yum install mysql-community-server -y
    
    - name: enable/start mysql
      ansible.builtin.service:
        name: mysqld
        enabled: true
        state: restarted

    - name: Get the initial temporary root password
      ansible.builtin.shell: "grep 'temporary password' /var/log/mysqld.log | awk '{print $NF}'"
      register: temp_mysql_password
      changed_when: false
      ignore_errors: yes

    - name: Set the new root password using the temporary password
      # This task will only run if we found a temporary password in the previous step
      when: temp_mysql_password.stdout != ""
      community.mysql.mysql_user:
        login_user: root
        login_password: "{{ temp_mysql_password.stdout }}"
        name: root
        host: localhost
        password: "RoboShop@1" # Your desired new password
        state: present